# =============================================================================
# SERVICEMONITOR: Конфигурация автоматического сбора метрик
# =============================================================================
# ServiceMonitor - это Custom Resource Definition (CRD) от Prometheus Operator
# Автоматически настраивает Prometheus для сбора метрик с указанных сервисов
# Работает по принципу Service Discovery - автоматически находит цели
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: demo-app-monitor
  namespace: demo-app
  labels:
    app: demo-app
    # КРИТИЧЕСКИ ВАЖНО: этот лейбл обязателен!
    # Prometheus Operator ищет ServiceMonitor'ы именно по этому лейблу
    # Должен совпадать с настройкой serviceMonitorSelector в Prometheus
    release: monitoring
spec:
  # =========================================================================
  # SELECTOR: Какие сервисы мониторить
  # =========================================================================
  # Выбирает сервисы по лейблам для автоматического сбора метрик
  selector:
    matchLabels:
      app: demo-app    # Будет мониторить сервисы с лейблом app=demo-app
      
  # =========================================================================
  # ENDPOINTS: Настройки сбора метрик
  # =========================================================================
  # Конфигурация того, КАК собирать метрики с найденных сервисов
  endpoints:
  - port: metrics           # Имя порта в сервисе (из Service.spec.ports[].name)
    interval: 30s          # Частота сбора метрик (каждые 30 секунд)
    path: /metrics         # HTTP путь к эндпоинту метрик
    scrapeTimeout: 10s     # Таймаут на один запрос сбора метрик
    # Дополнительные возможные настройки:
    # honorLabels: false   # Перезаписывать ли conflicting лейблы
    # scheme: http         # Протокол (http/https)
    # tlsConfig: {}        # Настройки TLS для HTTPS
    
  # =========================================================================
  # NAMESPACE SELECTOR: В каких namespace'ах искать сервисы
  # =========================================================================
  # Ограничивает поиск сервисов определёнными namespace'ами
  # По умолчанию ищет только в том же namespace где находится ServiceMonitor
  namespaceSelector:
    matchNames:
    - demo-app             # Искать сервисы только в namespace demo-app
    # Альтернативы:
    # any: true            # Искать во всех namespace'ах
    # matchNames: [ns1, ns2] # Искать в нескольких конкретных namespace'ах 